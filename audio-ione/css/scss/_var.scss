/* Scss Document */
@function px_to_rem($target, $context: $base-size) {
	@if $target==0 {
		@return 0
	}

	@return $target / $context+0rem;
}

$base-size: 16px;
$lh: 1.313;
$lhbody: 1.45;

$font1: 'Baloo 2';
$font2: 'Averta';
$color2: #F9B3AB;
$color1: #DF752E;
$color_border: #eeeeee;
$color_hover: #004f8b;
$url: "images" !default;
/*background: url("#{$url}/graphics/demo.gif") no-repeat 0 0;*/
$vne_color: #9f224e;
$vne_color_hover: #004f8b;
$main_width: 1000px;
$max_width_1000: 750px;
$max_width_750: 600px;
$max_width_600: 100%;

%social_btn {
	width: 16px;
	height: 16px;
	text-align: center;
	margin-left: 5px;
	display: inline-block;

	i {
		font-size: 11px;
		color: #fff;
		vertical-align: middle;
		display: inline-block;
		margin-top: 1px;
	}
}

@mixin cubic-transition($delay, $duration, $property) {
	transition: {
		duration: $duration;
		property: $property;
		timing-function: cubic-bezier(.7, 1, .7, 1);
	}
}

/* @include cubic-transition($delay: 0, $duration: 200ms, $property: (all)); */


%ic_font {
	font-family: "vnexpress-font" !important;
	font-style: normal !important;
	font-weight: normal !important;
	font-variant: normal !important;
	text-transform: none !important;
	// speak: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

/* box_feedback */
%box_feedback {
	width: 100%;
	background: #eee;
	display: inline-block;
	line-height: 40;
	height: 40px;
	overflow: hidden;
	margin-bottom: 15px;
	font: 700 14px/40px tahoma;

	.icon_feed_back {
		float: left;
		margin-right: 10px;
		width: 40px;
		height: 40px;
		text-align: center;
		color: #fff;

		/*font-size: 30px;*/
		/*i{
			color: #fff;
			font-size: 30px;
			display: inline-block;
			margin-top: 5px;
		}*/
		.ic-email {
			background-position: -476px -69px;
			width: 30px;
			height: 23px;
		}
	}

	.txt_feedback {
		text-align: center;
		display: block;
	}
}

/* End box_feedback */

// Margin, Padding

$max: 200;
$offset: 5;
$unit: "px";

@mixin list-loop($className, $styleName) {
	$i: 0;

	@while $i <=$max {
		#{$className + $i} {
			#{$styleName}: #{$i + $unit};
		}

		$i: $i+$offset;
	}
}

@include list-loop(".pl-", "padding-left");
@include list-loop(".pr-", "padding-right");
@include list-loop(".pb-", "padding-bottom");
@include list-loop(".pt-", "padding-top");

@include list-loop(".ml-", "margin-left");
@include list-loop(".mr-", "margin-right");
@include list-loop(".mb-", "margin-bottom");
@include list-loop(".mt-", "margin-top");